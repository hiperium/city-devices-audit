AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'SAM Template for Trails module.'

Globals:
  Function:
    Timeout: 30     # seconds
    MemorySize: 512 # MB
    Runtime: provided.al2023
    Architectures:
      - arm64

Parameters:
  ResourceDeletionPolicy:
    Type: String
    Default: 'Delete'
    AllowedValues:
      - Retain
      - Delete
    Description: 'Deletion policy for table/log resources. For Snapshot, you need to create a manual backup before deleting the stack to preserve the data.'

  EventBusName:
    Type: String
    Default: 'cities-event-bus'
    Description: 'Event bus name for the Hiperium City project.'

  SpringProfile:
    Type: String
    Default: 'dev'
    AllowedValues:
      - dev
      - qa
      - prod
    Description: 'Spring profile for the functions.'

  LogRetentionInDays:
    Type: Number
    Default: 7
    AllowedValues:
      - 7
      - 14
      - 30
    Description: 'Log retention in days for the functions.'

  AnomalyDetectorEvaluationFrequency:
    Type: String
    Default: 'ONE_HOUR'
    AllowedValues:
      - FIVE_MIN
      - TEN_MIN
      - FIFTEEN_MIN
      - THIRTY_MIN
      - ONE_HOUR
    Description: 'Anomaly detector evaluation frequency in minutes.'

Resources:
  TrailsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 'Trails'
      AttributeDefinitions:
        - AttributeName: 'id'
          AttributeType: S
        - AttributeName: 'cityId'
          AttributeType: S
      KeySchema:
        - AttributeName: 'id'
          KeyType: HASH
        - AttributeName: 'cityId'
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 2
      SSESpecification:
        SSEEnabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: !Ref ResourceDeletionPolicy

  CreateFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}/TrailCreateFunction"
      RetentionInDays: !Ref LogRetentionInDays
    UpdateReplacePolicy: Retain
    DeletionPolicy: !Ref ResourceDeletionPolicy

  CreateFunctionDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'trail-create-function-dlq'
      VisibilityTimeout: 300            # 5 minutes
      MaximumMessageSize: 262144        # 256 KB
      MessageRetentionPeriod: 1209600   # 14 days
      ReceiveMessageWaitTimeSeconds: 20
    UpdateReplacePolicy: Retain
    DeletionPolicy: !Ref ResourceDeletionPolicy

  CreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./trail-create-function
      FunctionName: 'trail-create-function'
      Description: 'Create trail function.'
      Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
      LoggingConfig:
        LogGroup: !Ref CreateFunctionLogGroup
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt CreateFunctionDLQ.Arn
      Events:
        EventBridgeEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref EventBusName
            Pattern:
              source:
                - 'hiperium.city.tasks.api'
              detail-type:
                - 'ExecutedTaskEvent'
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TrailsTable
        - DynamoDBWritePolicy:
            TableName: !Ref TrailsTable
      Environment:
        Variables:
          SPRING_PROFILES_ACTIVE: !Ref SpringProfile
    Metadata:
      BuildMethod: makefile

  CreateEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: 'trail-create-event-rule'
      Description: 'Create Trail Event Rule'
      EventBusName: !Ref EventBusName
      State: ENABLED
      EventPattern:
        source:
          - 'hiperium.city.tasks.api'
        detail-type:
          - 'ExecutedTaskEvent'
      Targets:
        - Arn: !GetAtt CreateFunction.Arn
          Id: 'TrailCreateFunctionTarget'
          RetryPolicy:
            MaximumRetryAttempts: 3
            MaximumEventAgeInSeconds: 300
          DeadLetterConfig:
            Arn: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${EventBusName}-dlq"

  CreateEventToLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CreateFunction
      Action: lambda:InvokeFunction
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt CreateEventRule.Arn

  CreateEventToSqsPermission:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${EventBusName}-dlq"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'events.amazonaws.com'
            Action: 'sqs:SendMessage'
            Resource: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${EventBusName}-dlq"
            Condition:
              ArnEquals:
                aws:SourceArn: !GetAtt CreateEventRule.Arn

  CreateFunctionLogAnomalyDetector:
    Type: AWS::Logs::LogAnomalyDetector
    Properties:
      LogGroupArnList:
        - !GetAtt CreateFunctionLogGroup.Arn
      EvaluationFrequency: !Ref AnomalyDetectorEvaluationFrequency
      AnomalyVisibilityTime: 21 # days

Outputs:
  TrailsTableArn:
    Description: 'Trails DynamoDB Table ARN.'
    Value: !GetAtt TrailsTable.Arn

  CreateFunctionArn:
    Description: 'Create Trail Function ARN.'
    Value: !GetAtt CreateFunction.Arn

  CreateEventRuleArn:
    Description: 'Create Trail Event Rule ARN.'
    Value: !GetAtt CreateEventRule.Arn
